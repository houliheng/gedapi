<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resoft.credit.gqgetComInfo.dao.BankLoanDao">
    
	<sql id="BankLoanColumns">
		a.id AS "id",
		a.apply_no AS "applyNo",
		a.is_loan AS "isLoan",
		a.loan_recode AS "loanRecode",
		a.is_overdue AS "isOverdue",
		a.source_of_credit_registries AS "sourceOfCreRegist"
	</sql>
	
	<sql id="BankLoanJoins">
	</sql>
    
	<select id="get" resultType="BankLoan">
		SELECT 
			<include refid="BankLoanColumns"/>
		FROM cre_bank_loan a
		<include refid="BankLoanJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="BankLoan">
		SELECT 
			<include refid="BankLoanColumns"/>
		FROM cre_bank_loan a
		<include refid="BankLoanJoins"/>
		<where>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="getCount" resultType="long">
		SELECT 
			count(a.id)
		FROM cre_bank_loan a
		<include refid="BankLoanJoins"/>
		<where>
			
		</where>
	</select>
	
	<select id="findAllList" resultType="BankLoan">
		SELECT 
			<include refid="BankLoanColumns"/>
		FROM cre_bank_loan a
		<include refid="BankLoanJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
	INSERT INTO cre_bank_loan(
		id,
		apply_no,
		is_loan,
		loan_recode,
		is_overdue,
		source_of_credit_registries,
		create_by,
		create_date,
		update_by,
		update_date
	) VALUES (
	#{id},
	#{applyNo},
	#{isLoan},
	#{loanRecode},
	#{isOverdue},
	#{sourceOfCreRegist},
	#{createBy.id},
	#{createDate},
	#{updateBy.id},
	#{updateDate}
	)
	</insert>
	
	<update id="update">
		UPDATE cre_bank_loan SET 	
			apply_no = #{applyNo},
			is_loan = #{isLoan},
			loan_recode = #{loanRecode},
			is_overdue = #{isOverdue},
			source_of_credit_registries = #{sourceOfCreRegist},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM cre_bank_loan
		WHERE id = #{id}
	</update>
	
	<update id="updateByApplyNo">
		UPDATE cre_bank_loan SET 	
			apply_no = #{applyNo},
			is_loan = #{isLoan},
			loan_recode = #{loanRecode},
			is_overdue = #{isOverdue},
			source_of_credit_registries = #{sourceOfCreRegist},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE apply_no = #{applyNo}
	</update>
	
	<select id="getBankLoanByApplyNo" resultType="BankLoan">
		SELECT 
			<include refid="BankLoanColumns"/>
		FROM cre_bank_loan a
		<where>
			<if test="applyNo != null and applyNo != ''">
				AND a.apply_no = #{applyNo}
		    </if>
		</where>
	</select>
	
</mapper>