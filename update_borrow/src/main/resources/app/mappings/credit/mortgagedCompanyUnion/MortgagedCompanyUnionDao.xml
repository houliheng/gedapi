<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resoft.credit.mortgagedCompanyUnion.dao.MortgagedCompanyUnionDao">

	<sql id="mortgagedCompanyUnionColumns">
		a.id AS "id",
		a.apply_no AS "applyNo",
		a.approve_id AS "approveId",
		a.relaton AS "relaton",
		a.company_desc AS "companyDesc",
		a.income_state AS "incomeState",
		a.operation_state AS "operationState",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>

	<sql id="mortgagedCompanyUnionJoins">
	</sql>

	<select id="get" resultType="MortgagedCompanyUnion">
		SELECT
		<include refid="mortgagedCompanyUnionColumns" />
		FROM cre_mortgaged_company_union a
		<include refid="mortgagedCompanyUnionJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="MortgagedCompanyUnion">
		SELECT
		<include refid="mortgagedCompanyUnionColumns" />
		FROM cre_mortgaged_company_union a
		<include refid="mortgagedCompanyUnionJoins" />
		<where>
			and a.apply_no = #{applyNo}
			and a.approve_id = #{approveId}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
		
	</select>

	<select id="getCount" resultType="long">
		SELECT
		count(a.id)
		FROM cre_mortgaged_company_union a
		<include refid="mortgagedCompanyUnionJoins" />
		<where>

		</where>
	</select>

	<select id="findAllList" resultType="MortgagedCompanyUnion">
		SELECT
		<include refid="mortgagedCompanyUnionColumns" />
		FROM cre_mortgaged_company_union a
		<include refid="mortgagedCompanyUnionJoins" />
		<where>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO cre_mortgaged_company_union(
		id,
		apply_no,
		approve_id,
		relaton,
		company_desc,
		income_state,
		operation_state,
		create_by,
		create_date,
		update_by,
		update_date
		) VALUES (
		#{id},
		#{applyNo},
		#{approveId},
		#{relaton},
		#{companyDesc},
		#{incomeState},
		#{operationState},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate}
		)
	</insert>

	<insert id="insertMortgagedCompanyUnionData">
		INSERT INTO cre_mortgaged_company_union(
		id,
		apply_no,
		approve_id,
		relaton,
		company_desc,
		income_state,
		operation_state,
		create_by,
		create_date,
		update_by,
		update_date
		) VALUES
		<foreach item="gqgetGuarantorCompany" collection="gqgetGuarantorCompanies" index="index" separator=",">
			(
			UUID_SHORT(),
			#{gqgetGuarantorCompany.applyNo},
			#{checkApproveId},
			#{gqgetGuarantorCompany.relaton},
			#{gqgetGuarantorCompany.companyDesc},
			#{gqgetGuarantorCompany.incomeState},
			#{gqgetGuarantorCompany.operationState},
			#{gqgetGuarantorCompany.createBy.id},
			#{gqgetGuarantorCompany.createDate},
			#{gqgetGuarantorCompany.updateBy.id},
			#{gqgetGuarantorCompany.updateDate}
			)
		</foreach>
	</insert>

	<update id="update">
		UPDATE cre_mortgaged_company_union SET
		apply_no = #{applyNo},
		approve_id = #{approveId},
		relaton = #{relaton},
		company_desc = #{companyDesc},
		income_state = #{incomeState},
		operation_state = #{operationState},
		update_by = #{updateBy.id},
		update_date =
		#{updateDate}
		WHERE id = #{id}
	</update>

	<update id="delete">
		DELETE FROM cre_mortgaged_company_union
		WHERE id = #{id}
	</update>

	<update id="deleteMortgagedCompanyUnionData">
		DELETE FROM cre_mortgaged_company_union WHERE apply_no = #{applyNo}
	</update>

</mapper>