<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.resoft.credit.guaranteeRelation.dao.GuaranteeRelationDao">
    
	<sql id="guaranteeRelationColumns">
		a.id AS "id",
		a.apply_no AS "applyNo",
		a.role_type AS "roleType",
		a.cust_id AS "custId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.COMPANY_ID AS "companyId",
		a.IS_CONFIRM AS "isConfirm"
	</sql>
	
	<sql id="guaranteeRelationJoins">
	</sql>
    
	<select id="get" resultType="GuaranteeRelation">
		SELECT 
			<include refid="guaranteeRelationColumns"/>
		FROM cre_guarantee_relation a
		<include refid="guaranteeRelationJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select  id="getRelationByApplyNoAndCompanyId" resultType="GuaranteeRelation">
		select 
			<include refid="guaranteeRelationColumns"/>
		from 
			cre_guarantee_relation a 
		where a.apply_no=#{applyNo}
			and a.COMPANY_ID = #{companyId} and a.DEL_FLAG = '0'
	</select>
	
	
	<select id="findList" resultType="GuaranteeRelation">
		SELECT 
			<include refid="guaranteeRelationColumns"/>
		FROM cre_guarantee_relation a
		<include refid="guaranteeRelationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="getCount" resultType="long">
		SELECT 
			count(a.id)
		FROM cre_guarantee_relation a
		<include refid="guaranteeRelationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
	</select>
	
	<select id="findAllList" resultType="GuaranteeRelation">
		SELECT 
			<include refid="guaranteeRelationColumns"/>
		FROM cre_guarantee_relation a
		<include refid="guaranteeRelationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO cre_guarantee_relation(
			id,
			apply_no,
			role_type,
			cust_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			COMPANY_ID	
		) VALUES (
			#{id},
			#{applyNo},
			#{roleType},
			#{custId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{companyId}	
		)
	</insert>
	
	<update id="update">
		UPDATE cre_guarantee_relation SET 	
			apply_no = #{applyNo},
			role_type = #{roleType},
			cust_id = #{custId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			COMPANY_ID = #{companyId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE cre_guarantee_relation SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	    
	<select id="findGedGuarantee" resultType="GuaranteeRelation">
		SELECT b.ID as "id",
			<include refid="guaranteeRelationColumns" />,
			b.ID_NUM	as "idNum",
			b.MOBILE_NUM	as "mobileNum",
			b.cust_name AS "custName"
		FROM cre_guarantee_relation a
		INNER JOIN cre_cust_info b
			ON b.ID = a.CUST_ID
		WHERE 
			a.APPLY_NO = #{applyNo}
			and a.COMPANY_ID = #{companyId}
			AND a.ROLE_TYPE = #{roleType}
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
	</select>
	
	<select id="findGedCompanyGuarantee" resultType="GuaranteeRelation">
		SELECT b.ID as "id",
			<include refid="guaranteeRelationColumns" />,
			b.UN_SOC_CREDIT_NO	as "idNum",
			b.CORPORATION_MOBILE	as "mobileNum",
			b.BUSI_REG_NAME AS "custName"
		FROM cre_guarantee_relation a
		INNER JOIN cre_company_info b
			ON b.ID = a.CUST_ID
		WHERE 
			a.APPLY_NO = #{applyNo}
			and a.COMPANY_ID = #{companyId}
			AND a.ROLE_TYPE = #{roleType}
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
	</select>
	
	<insert id = "batchInsert" parameterType ="java.util.List">
		INSERT INTO cre_guarantee_relation(
			id,
			apply_no,
			role_type,
			cust_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			COMPANY_ID	
		)values
		<foreach item="list" collection="guaranteeRelationList" index="index" separator=",">
		(
			#{list.id},
			#{list.applyNo},
			#{list.roleType},
			#{list.custId},
			#{list.createBy.id},
			#{list.createDate},
			#{list.updateBy.id},
			#{list.updateDate},
			#{list.delFlag},
			#{list.companyId}
		)
		</foreach>
	</insert>
	
	<delete  id="deleteAllRelation">
		DELETE  FROM  cre_guarantee_relation
			WHERE  APPLY_NO = #{param1}
				AND	COMPANY_ID =#{param2}
				AND role_type='1'
	</delete>
	
	<delete  id="deleteByApplyNo">
		DELETE  FROM  cre_guarantee_relation
			WHERE  APPLY_NO = #{applyNo}
	</delete>
	
	<delete  id="deleteAllCompanyRelation">
		DELETE  FROM  cre_guarantee_relation
			WHERE  APPLY_NO = #{param1}
				AND	COMPANY_ID =#{param2}
				AND role_type='2'
	</delete>
	
	<select id="getCompanySearchMessage" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
		b.UN_SOC_CREDIT_NO	AS "code" ,
		'1'	AS "type",
		b.CORPORATION_MOBILE AS "mobile",
		'2'	AS "userRole"
		FROM cre_guarantee_relation a
		INNER JOIN cre_company_info b
			ON b.ID = a.CUST_ID
		left join cre_check_approve_union d on a.APPLY_NO = d.APPLY_NO and a.company_id = d.cust_id
		left join cre_apply_company_relation c
			on c.apply_no=a.apply_no and c.cust_id = b.id and c.cust_id = a.cust_id
		WHERE
			a.APPLY_NO = #{applyNo}
			AND a.ROLE_TYPE = '2'
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
			and c.DEL_FLAG='0'
			and c.id is not null
			and d.id is not null
	</select>
	
	<select id="getMainCompanySearchMessage" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
		b.UN_SOC_CREDIT_NO	AS "code" ,
		'1'	AS "type",
		b.CORPORATION_MOBILE AS "mobile",
		c.role_type	AS "userRole"
		FROM cre_guarantee_relation a
		INNER JOIN cre_company_info b
			ON b.ID = a.CUST_ID
		left join cre_apply_relation c 
			on c.apply_no=a.apply_no and c.cust_id = b.id and c.cust_id = a.cust_id
		WHERE 
			a.APPLY_NO = #{applyNo}
			AND a.ROLE_TYPE = '2'
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
			and c.id is not null
			
	</select>
	
	<select id="getGRMainCompanySearchMessage" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
			b.UN_SOC_CREDIT_NO	AS "code" ,
			'1'	AS "type",
			b.CORPORATION_MOBILE AS "mobile",
			"2"	AS "userRole"
		FROM 
			cre_apply_relation a
		INNER JOIN cre_company_info b
			ON b.ID = a.CUST_ID
		WHERE 
			a.APPLY_NO = #{applyNo}
			AND a.ROLE_TYPE = '6'
			and a.DEL_FLAG = '0'
	</select>
	
	<select id="getGRMainSearchMessageInfo" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
			b.MOBILE_NUM AS "mobile",
			'1' AS "userRole"
		FROM 
			cre_apply_relation a
		INNER JOIN cre_cust_info b
			ON b.ID = a.CUST_ID
		WHERE 
			a.APPLY_NO = #{applyNo}
			AND a.ROLE_TYPE = '3'
			and a.DEL_FLAG = '0'
	</select>
	
	<select id="getSearchBatchCompany" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
		b.UN_SOC_CREDIT_NO	AS "code" ,
		'1'	AS "type",
		b.CORPORATION_MOBILE AS "mobile",
		'2'	AS "userRole"
		FROM  	cre_check_approve_union a
		left join cre_company_info b
			on  a.cust_id = b.id 
		WHERE 
			a.APPLY_NO = #{applyNo}
			and b.DEL_FLAG = '0'
	</select>
	
	
	<select id="getSearchMessageInfo" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
		SELECT 
		b.MOBILE_NUM AS "mobile",
		'1' AS "userRole"
		FROM cre_guarantee_relation a
		INNER JOIN cre_cust_info b
			ON b.ID = a.CUST_ID
		left join cre_apply_company_relation c
			on c.apply_no=a.apply_no and c.cust_id = b.id and c.cust_id = a.cust_id
		left join cre_check_approve_union d on a.APPLY_NO = d.APPLY_NO and a.company_id = d.cust_id
		WHERE 
			a.APPLY_NO = #{applyNo}
			AND a.ROLE_TYPE = '1'
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
			and c.DEL_FLAG='0'
			and c.id is not null
			and d.id is not null
	</select> 
	
		<select id="getMainSearchMessageInfo" resultType="com.resoft.outinterface.rest.newged.entity.FindIsRegisterRequest">
			SELECT 
			b.MOBILE_NUM AS "mobile",
			c.role_type AS "userRole"
			FROM cre_guarantee_relation a
			INNER JOIN cre_cust_info b
				ON b.ID = a.CUST_ID
			left join cre_apply_relation c 
				on c.apply_no=a.apply_no and c.cust_id = b.id and c.cust_id = a.cust_id
			WHERE 
				a.APPLY_NO = #{applyNo}
				AND a.ROLE_TYPE = '1'
				and a.DEL_FLAG = '0'
				and b.DEL_FLAG = '0'
				and c.id is not null
		</select>
	
	
	<select id="findAllGuarantorByApplyNo" resultType="GuaranteeRelation">
		SELECT 
			<include refid="guaranteeRelationColumns" />,
			b.ID_NUM	as "idNum",
			b.MOBILE_NUM	as "mobileNum",
			c.id as "orderCode"
			<!-- b.cust_name AS "custName" -->
		FROM cre_guarantee_relation a
		INNER JOIN cre_cust_info b
			ON b.ID = a.CUST_ID
		left join cre_check_approve_union c
			on c.cust_id = a.COMPANY_ID and c.apply_no = a.apply_no
		WHERE 
			a.APPLY_NO = #{applyNo}
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
			and a.ROLE_TYPE='1'
	</select>
	
	<select id="findAllGuarantCompanyByApplyNo" resultType="GuaranteeRelation">
		SELECT 
			<include refid="guaranteeRelationColumns" />,
			b.UN_SOC_CREDIT_NO	as "idNum",
			b.CORPORATION_MOBILE	as "mobileNum",
			c.id as "orderCode"
			<!-- b.cust_name AS "custName" -->
		FROM cre_guarantee_relation a
		INNER JOIN cre_company_info b
			ON b.ID = a.CUST_ID
		left join cre_check_approve_union c
			on c.cust_id = a.COMPANY_ID and c.apply_no = a.apply_no 
		WHERE 
			a.APPLY_NO = #{applyNo}
			and a.DEL_FLAG = '0'
			and b.DEL_FLAG = '0'
			and a.ROLE_TYPE='2'
	</select>
	
	<select  id="getIdByApplyNoAndCompanyId" resultType="String">
		select 
			a.id 
		from 
			cre_guarantee_relation a 
		where a.apply_no=#{applyNo}
			and a.COMPANY_ID = #{companyId}
	</select>
	
	
	
	
	
	<select id="findGuarantCompany" resultType="com.resoft.outinterface.rest.newged.entity.GedPushGuaranteeRequest">
		SELECT
			c.id AS "orderCode",
			a.apply_no AS "masterOrderCode",
			a.role_type AS "guarantorType",
			b.LINK_MOBILE AS "guarantMobile",
			'1' AS "type",
			b.UN_SOC_CREDIT_NO AS "code",
			b.GUARANTEE_lIMIT AS "guaranteeAmount",
			b.id AS "borrowGuarantorId"
		FROM
			cre_apply_company_relation a
		INNER JOIN cre_guarantee_company b ON b.ID = a.CUST_ID
		LEFT JOIN cre_check_approve_union c on c.CUST_ID=a.COMPANY_ID AND c.APPLY_NO = a.APPLY_NO
		WHERE
			a.APPLY_NO = #{applyNo}
		AND c.id IS NOT NULL
		and a.ROLE_TYPE='3'
		AND a.DEL_FLAG = '0'
		AND b.DEL_FLAG = '0'
	</select>
	
	<select id="findGuarantMainCompany" resultType="com.resoft.outinterface.rest.newged.entity.GedPushGuaranteeRequest">
		SELECT
			<!-- c.id AS "orderCode",
			a.apply_no AS "masterOrderCode", -->
			'3' AS "guarantorType",
			b.LINK_MOBILE AS "guarantMobile",
			'1' AS "type",
			b.UN_SOC_CREDIT_NO AS "code",
			b.GUARANTEE_lIMIT AS "guaranteeAmount",
			b.id AS "borrowGuarantorId"
		FROM
			 cre_guarantee_company b 
		WHERE
			b.id=#{custId}
	</select>

	<select id="listConfirmStatus" resultType="GuaranteeRelation">
		select
		<include refid="guaranteeRelationColumns" />
		FROM cre_guarantee_relation a
		INNER JOIN cre_apply_relation ar on a.company_id = ar.cust_id
		WHERE
        a.apply_no = #{applyNo}
		<if test="companyId != null">
			and a.company_id = #{companyId}
		</if>
        and ar.role_type = #{applyRoleType}
        and a.role_type = #{guaranteeRoleType}
        and a.del_flag = '0'
        and ar.del_flag = '0'
	</select>

</mapper>