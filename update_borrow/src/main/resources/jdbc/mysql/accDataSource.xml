<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-lazy-init="true">

	<bean id="accDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${acc.driver}" />
		<property name="url" value="${acc.url}" />
		<property name="username" value="${acc.username}" />
		<property name="password" value="${acc.password}" />
		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="${acc.testSql}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>
	<!-- session Factory -->
	<bean id="accSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="accDataSource" />
		<property name="typeAliasesPackage" value="com.resoft.accounting,com.resoft.multds.accounting" /><!-- 如果多个，需要用","分割 -->
		<property name="typeAliasesSuperType" value="com.thinkgem.jeesite.common.persistence.BaseEntity" />
		<property name="mapperLocations">
			<list>
			    <value>classpath*:/mappings/sys/PublicTag.xml</value>
				<value>classpath*:/app/mappings/accounting/**/*.xml</value>
				<value>classpath*:/app/mappings/multds/accounting/**/*.xml</value>
			</list>
		</property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
    <!-- session Template -->
	<bean id="accSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="accSqlSessionFactory" />
	</bean>
    <!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
	<bean id="accMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionTemplateBeanName" value="accSqlSessionTemplate" />
		<property name="basePackage" value="com.resoft.accounting,com.resoft.multds.accounting,com.resoft.Accoutinterface" /> <!-- 如果多个，需要用","分割 -->
		<property name="annotationClass" value="com.thinkgem.jeesite.common.persistence.annotation.MyBatisDao" />
	</bean>
    
    <!-- 定义事务 -->
	<bean id="accTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="accDataSource" />
		<!-- 事务别名 -->
		<qualifier value="ACC" />
	</bean>
	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
	<tx:annotation-driven transaction-manager="accTransactionManager" proxy-target-class="true" />
</beans>