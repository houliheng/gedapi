/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.gq.ged.order.tmodel;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import javax.annotation.Generated;
import java.util.*;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-01-18")
public class OrderThriftForm implements org.apache.thrift.TBase<OrderThriftForm, OrderThriftForm._Fields>, java.io.Serializable, Cloneable, Comparable<OrderThriftForm> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OrderThriftForm");

  private static final org.apache.thrift.protocol.TField ORDER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("orderCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("companyType", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LOAN_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("loanAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField LOAN_TERM_FIELD_DESC = new org.apache.thrift.protocol.TField("loanTerm", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField MANAGEMENT_ADDR_FIELD_DESC = new org.apache.thrift.protocol.TField("managementAddr", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CONTACT_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactPhone", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField GUARANTEE_FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("guaranteeFlag", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField RECOMMEND_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendCode", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrderThriftFormStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrderThriftFormTupleSchemeFactory());
  }

  public String orderCode; // required
  public String companyName; // required
  public String companyType; // required
  public double loanAmount; // required
  public int loanTerm; // required
  public String managementAddr; // required
  public String contactPhone; // required
  public int guaranteeFlag; // required
  public String recommendCode; // required
  public int status; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_CODE((short)1, "orderCode"),
    COMPANY_NAME((short)2, "companyName"),
    COMPANY_TYPE((short)3, "companyType"),
    LOAN_AMOUNT((short)4, "loanAmount"),
    LOAN_TERM((short)5, "loanTerm"),
    MANAGEMENT_ADDR((short)6, "managementAddr"),
    CONTACT_PHONE((short)7, "contactPhone"),
    GUARANTEE_FLAG((short)8, "guaranteeFlag"),
    RECOMMEND_CODE((short)9, "recommendCode"),
    STATUS((short)10, "status");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_CODE
          return ORDER_CODE;
        case 2: // COMPANY_NAME
          return COMPANY_NAME;
        case 3: // COMPANY_TYPE
          return COMPANY_TYPE;
        case 4: // LOAN_AMOUNT
          return LOAN_AMOUNT;
        case 5: // LOAN_TERM
          return LOAN_TERM;
        case 6: // MANAGEMENT_ADDR
          return MANAGEMENT_ADDR;
        case 7: // CONTACT_PHONE
          return CONTACT_PHONE;
        case 8: // GUARANTEE_FLAG
          return GUARANTEE_FLAG;
        case 9: // RECOMMEND_CODE
          return RECOMMEND_CODE;
        case 10: // STATUS
          return STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __LOANAMOUNT_ISSET_ID = 0;
  private static final int __LOANTERM_ISSET_ID = 1;
  private static final int __GUARANTEEFLAG_ISSET_ID = 2;
  private static final int __STATUS_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_CODE, new org.apache.thrift.meta_data.FieldMetaData("orderCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("companyType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOAN_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("loanAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.LOAN_TERM, new org.apache.thrift.meta_data.FieldMetaData("loanTerm", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MANAGEMENT_ADDR, new org.apache.thrift.meta_data.FieldMetaData("managementAddr", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACT_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GUARANTEE_FLAG, new org.apache.thrift.meta_data.FieldMetaData("guaranteeFlag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RECOMMEND_CODE, new org.apache.thrift.meta_data.FieldMetaData("recommendCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OrderThriftForm.class, metaDataMap);
  }

  public OrderThriftForm() {
  }

  public OrderThriftForm(
    String orderCode,
    String companyName,
    String companyType,
    double loanAmount,
    int loanTerm,
    String managementAddr,
    String contactPhone,
    int guaranteeFlag,
    String recommendCode,
    int status)
  {
    this();
    this.orderCode = orderCode;
    this.companyName = companyName;
    this.companyType = companyType;
    this.loanAmount = loanAmount;
    setLoanAmountIsSet(true);
    this.loanTerm = loanTerm;
    setLoanTermIsSet(true);
    this.managementAddr = managementAddr;
    this.contactPhone = contactPhone;
    this.guaranteeFlag = guaranteeFlag;
    setGuaranteeFlagIsSet(true);
    this.recommendCode = recommendCode;
    this.status = status;
    setStatusIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OrderThriftForm(OrderThriftForm other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderCode()) {
      this.orderCode = other.orderCode;
    }
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    if (other.isSetCompanyType()) {
      this.companyType = other.companyType;
    }
    this.loanAmount = other.loanAmount;
    this.loanTerm = other.loanTerm;
    if (other.isSetManagementAddr()) {
      this.managementAddr = other.managementAddr;
    }
    if (other.isSetContactPhone()) {
      this.contactPhone = other.contactPhone;
    }
    this.guaranteeFlag = other.guaranteeFlag;
    if (other.isSetRecommendCode()) {
      this.recommendCode = other.recommendCode;
    }
    this.status = other.status;
  }

  public OrderThriftForm deepCopy() {
    return new OrderThriftForm(this);
  }

  @Override
  public void clear() {
    this.orderCode = null;
    this.companyName = null;
    this.companyType = null;
    setLoanAmountIsSet(false);
    this.loanAmount = 0.0;
    setLoanTermIsSet(false);
    this.loanTerm = 0;
    this.managementAddr = null;
    this.contactPhone = null;
    setGuaranteeFlagIsSet(false);
    this.guaranteeFlag = 0;
    this.recommendCode = null;
    setStatusIsSet(false);
    this.status = 0;
  }

  public String getOrderCode() {
    return this.orderCode;
  }

  public OrderThriftForm setOrderCode(String orderCode) {
    this.orderCode = orderCode;
    return this;
  }

  public void unsetOrderCode() {
    this.orderCode = null;
  }

  /** Returns true if field orderCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderCode() {
    return this.orderCode != null;
  }

  public void setOrderCodeIsSet(boolean value) {
    if (!value) {
      this.orderCode = null;
    }
  }

  public String getCompanyName() {
    return this.companyName;
  }

  public OrderThriftForm setCompanyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public String getCompanyType() {
    return this.companyType;
  }

  public OrderThriftForm setCompanyType(String companyType) {
    this.companyType = companyType;
    return this;
  }

  public void unsetCompanyType() {
    this.companyType = null;
  }

  /** Returns true if field companyType is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyType() {
    return this.companyType != null;
  }

  public void setCompanyTypeIsSet(boolean value) {
    if (!value) {
      this.companyType = null;
    }
  }

  public double getLoanAmount() {
    return this.loanAmount;
  }

  public OrderThriftForm setLoanAmount(double loanAmount) {
    this.loanAmount = loanAmount;
    setLoanAmountIsSet(true);
    return this;
  }

  public void unsetLoanAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID);
  }

  /** Returns true if field loanAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID);
  }

  public void setLoanAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANAMOUNT_ISSET_ID, value);
  }

  public int getLoanTerm() {
    return this.loanTerm;
  }

  public OrderThriftForm setLoanTerm(int loanTerm) {
    this.loanTerm = loanTerm;
    setLoanTermIsSet(true);
    return this;
  }

  public void unsetLoanTerm() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOANTERM_ISSET_ID);
  }

  /** Returns true if field loanTerm is set (has been assigned a value) and false otherwise */
  public boolean isSetLoanTerm() {
    return EncodingUtils.testBit(__isset_bitfield, __LOANTERM_ISSET_ID);
  }

  public void setLoanTermIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOANTERM_ISSET_ID, value);
  }

  public String getManagementAddr() {
    return this.managementAddr;
  }

  public OrderThriftForm setManagementAddr(String managementAddr) {
    this.managementAddr = managementAddr;
    return this;
  }

  public void unsetManagementAddr() {
    this.managementAddr = null;
  }

  /** Returns true if field managementAddr is set (has been assigned a value) and false otherwise */
  public boolean isSetManagementAddr() {
    return this.managementAddr != null;
  }

  public void setManagementAddrIsSet(boolean value) {
    if (!value) {
      this.managementAddr = null;
    }
  }

  public String getContactPhone() {
    return this.contactPhone;
  }

  public OrderThriftForm setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

  public void unsetContactPhone() {
    this.contactPhone = null;
  }

  /** Returns true if field contactPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactPhone() {
    return this.contactPhone != null;
  }

  public void setContactPhoneIsSet(boolean value) {
    if (!value) {
      this.contactPhone = null;
    }
  }

  public int getGuaranteeFlag() {
    return this.guaranteeFlag;
  }

  public OrderThriftForm setGuaranteeFlag(int guaranteeFlag) {
    this.guaranteeFlag = guaranteeFlag;
    setGuaranteeFlagIsSet(true);
    return this;
  }

  public void unsetGuaranteeFlag() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GUARANTEEFLAG_ISSET_ID);
  }

  /** Returns true if field guaranteeFlag is set (has been assigned a value) and false otherwise */
  public boolean isSetGuaranteeFlag() {
    return EncodingUtils.testBit(__isset_bitfield, __GUARANTEEFLAG_ISSET_ID);
  }

  public void setGuaranteeFlagIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GUARANTEEFLAG_ISSET_ID, value);
  }

  public String getRecommendCode() {
    return this.recommendCode;
  }

  public OrderThriftForm setRecommendCode(String recommendCode) {
    this.recommendCode = recommendCode;
    return this;
  }

  public void unsetRecommendCode() {
    this.recommendCode = null;
  }

  /** Returns true if field recommendCode is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendCode() {
    return this.recommendCode != null;
  }

  public void setRecommendCodeIsSet(boolean value) {
    if (!value) {
      this.recommendCode = null;
    }
  }

  public int getStatus() {
    return this.status;
  }

  public OrderThriftForm setStatus(int status) {
    this.status = status;
    setStatusIsSet(true);
    return this;
  }

  public void unsetStatus() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUS_ISSET_ID);
  }

  public void setStatusIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_CODE:
      if (value == null) {
        unsetOrderCode();
      } else {
        setOrderCode((String)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((String)value);
      }
      break;

    case COMPANY_TYPE:
      if (value == null) {
        unsetCompanyType();
      } else {
        setCompanyType((String)value);
      }
      break;

    case LOAN_AMOUNT:
      if (value == null) {
        unsetLoanAmount();
      } else {
        setLoanAmount((Double)value);
      }
      break;

    case LOAN_TERM:
      if (value == null) {
        unsetLoanTerm();
      } else {
        setLoanTerm((Integer)value);
      }
      break;

    case MANAGEMENT_ADDR:
      if (value == null) {
        unsetManagementAddr();
      } else {
        setManagementAddr((String)value);
      }
      break;

    case CONTACT_PHONE:
      if (value == null) {
        unsetContactPhone();
      } else {
        setContactPhone((String)value);
      }
      break;

    case GUARANTEE_FLAG:
      if (value == null) {
        unsetGuaranteeFlag();
      } else {
        setGuaranteeFlag((Integer)value);
      }
      break;

    case RECOMMEND_CODE:
      if (value == null) {
        unsetRecommendCode();
      } else {
        setRecommendCode((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_CODE:
      return getOrderCode();

    case COMPANY_NAME:
      return getCompanyName();

    case COMPANY_TYPE:
      return getCompanyType();

    case LOAN_AMOUNT:
      return getLoanAmount();

    case LOAN_TERM:
      return getLoanTerm();

    case MANAGEMENT_ADDR:
      return getManagementAddr();

    case CONTACT_PHONE:
      return getContactPhone();

    case GUARANTEE_FLAG:
      return getGuaranteeFlag();

    case RECOMMEND_CODE:
      return getRecommendCode();

    case STATUS:
      return getStatus();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_CODE:
      return isSetOrderCode();
    case COMPANY_NAME:
      return isSetCompanyName();
    case COMPANY_TYPE:
      return isSetCompanyType();
    case LOAN_AMOUNT:
      return isSetLoanAmount();
    case LOAN_TERM:
      return isSetLoanTerm();
    case MANAGEMENT_ADDR:
      return isSetManagementAddr();
    case CONTACT_PHONE:
      return isSetContactPhone();
    case GUARANTEE_FLAG:
      return isSetGuaranteeFlag();
    case RECOMMEND_CODE:
      return isSetRecommendCode();
    case STATUS:
      return isSetStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OrderThriftForm)
      return this.equals((OrderThriftForm)that);
    return false;
  }

  public boolean equals(OrderThriftForm that) {
    if (that == null)
      return false;

    boolean this_present_orderCode = true && this.isSetOrderCode();
    boolean that_present_orderCode = true && that.isSetOrderCode();
    if (this_present_orderCode || that_present_orderCode) {
      if (!(this_present_orderCode && that_present_orderCode))
        return false;
      if (!this.orderCode.equals(that.orderCode))
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_companyType = true && this.isSetCompanyType();
    boolean that_present_companyType = true && that.isSetCompanyType();
    if (this_present_companyType || that_present_companyType) {
      if (!(this_present_companyType && that_present_companyType))
        return false;
      if (!this.companyType.equals(that.companyType))
        return false;
    }

    boolean this_present_loanAmount = true;
    boolean that_present_loanAmount = true;
    if (this_present_loanAmount || that_present_loanAmount) {
      if (!(this_present_loanAmount && that_present_loanAmount))
        return false;
      if (this.loanAmount != that.loanAmount)
        return false;
    }

    boolean this_present_loanTerm = true;
    boolean that_present_loanTerm = true;
    if (this_present_loanTerm || that_present_loanTerm) {
      if (!(this_present_loanTerm && that_present_loanTerm))
        return false;
      if (this.loanTerm != that.loanTerm)
        return false;
    }

    boolean this_present_managementAddr = true && this.isSetManagementAddr();
    boolean that_present_managementAddr = true && that.isSetManagementAddr();
    if (this_present_managementAddr || that_present_managementAddr) {
      if (!(this_present_managementAddr && that_present_managementAddr))
        return false;
      if (!this.managementAddr.equals(that.managementAddr))
        return false;
    }

    boolean this_present_contactPhone = true && this.isSetContactPhone();
    boolean that_present_contactPhone = true && that.isSetContactPhone();
    if (this_present_contactPhone || that_present_contactPhone) {
      if (!(this_present_contactPhone && that_present_contactPhone))
        return false;
      if (!this.contactPhone.equals(that.contactPhone))
        return false;
    }

    boolean this_present_guaranteeFlag = true;
    boolean that_present_guaranteeFlag = true;
    if (this_present_guaranteeFlag || that_present_guaranteeFlag) {
      if (!(this_present_guaranteeFlag && that_present_guaranteeFlag))
        return false;
      if (this.guaranteeFlag != that.guaranteeFlag)
        return false;
    }

    boolean this_present_recommendCode = true && this.isSetRecommendCode();
    boolean that_present_recommendCode = true && that.isSetRecommendCode();
    if (this_present_recommendCode || that_present_recommendCode) {
      if (!(this_present_recommendCode && that_present_recommendCode))
        return false;
      if (!this.recommendCode.equals(that.recommendCode))
        return false;
    }

    boolean this_present_status = true;
    boolean that_present_status = true;
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (this.status != that.status)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_orderCode = true && (isSetOrderCode());
    list.add(present_orderCode);
    if (present_orderCode)
      list.add(orderCode);

    boolean present_companyName = true && (isSetCompanyName());
    list.add(present_companyName);
    if (present_companyName)
      list.add(companyName);

    boolean present_companyType = true && (isSetCompanyType());
    list.add(present_companyType);
    if (present_companyType)
      list.add(companyType);

    boolean present_loanAmount = true;
    list.add(present_loanAmount);
    if (present_loanAmount)
      list.add(loanAmount);

    boolean present_loanTerm = true;
    list.add(present_loanTerm);
    if (present_loanTerm)
      list.add(loanTerm);

    boolean present_managementAddr = true && (isSetManagementAddr());
    list.add(present_managementAddr);
    if (present_managementAddr)
      list.add(managementAddr);

    boolean present_contactPhone = true && (isSetContactPhone());
    list.add(present_contactPhone);
    if (present_contactPhone)
      list.add(contactPhone);

    boolean present_guaranteeFlag = true;
    list.add(present_guaranteeFlag);
    if (present_guaranteeFlag)
      list.add(guaranteeFlag);

    boolean present_recommendCode = true && (isSetRecommendCode());
    list.add(present_recommendCode);
    if (present_recommendCode)
      list.add(recommendCode);

    boolean present_status = true;
    list.add(present_status);
    if (present_status)
      list.add(status);

    return list.hashCode();
  }

  @Override
  public int compareTo(OrderThriftForm other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderCode()).compareTo(other.isSetOrderCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderCode, other.orderCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyType()).compareTo(other.isSetCompanyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyType, other.companyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanAmount()).compareTo(other.isSetLoanAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanAmount, other.loanAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoanTerm()).compareTo(other.isSetLoanTerm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoanTerm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loanTerm, other.loanTerm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetManagementAddr()).compareTo(other.isSetManagementAddr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetManagementAddr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.managementAddr, other.managementAddr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactPhone()).compareTo(other.isSetContactPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactPhone, other.contactPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGuaranteeFlag()).compareTo(other.isSetGuaranteeFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGuaranteeFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.guaranteeFlag, other.guaranteeFlag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommendCode()).compareTo(other.isSetRecommendCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendCode, other.recommendCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OrderThriftForm(");
    boolean first = true;

    sb.append("orderCode:");
    if (this.orderCode == null) {
      sb.append("null");
    } else {
      sb.append(this.orderCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("companyName:");
    if (this.companyName == null) {
      sb.append("null");
    } else {
      sb.append(this.companyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("companyType:");
    if (this.companyType == null) {
      sb.append("null");
    } else {
      sb.append(this.companyType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanAmount:");
    sb.append(this.loanAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loanTerm:");
    sb.append(this.loanTerm);
    first = false;
    if (!first) sb.append(", ");
    sb.append("managementAddr:");
    if (this.managementAddr == null) {
      sb.append("null");
    } else {
      sb.append(this.managementAddr);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactPhone:");
    if (this.contactPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.contactPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("guaranteeFlag:");
    sb.append(this.guaranteeFlag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("recommendCode:");
    if (this.recommendCode == null) {
      sb.append("null");
    } else {
      sb.append(this.recommendCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    sb.append(this.status);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrderThriftFormStandardSchemeFactory implements SchemeFactory {
    public OrderThriftFormStandardScheme getScheme() {
      return new OrderThriftFormStandardScheme();
    }
  }

  private static class OrderThriftFormStandardScheme extends StandardScheme<OrderThriftForm> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OrderThriftForm struct) throws TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderCode = iprot.readString();
              struct.setOrderCodeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyType = iprot.readString();
              struct.setCompanyTypeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOAN_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.loanAmount = iprot.readDouble();
              struct.setLoanAmountIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOAN_TERM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loanTerm = iprot.readI32();
              struct.setLoanTermIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MANAGEMENT_ADDR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.managementAddr = iprot.readString();
              struct.setManagementAddrIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CONTACT_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactPhone = iprot.readString();
              struct.setContactPhoneIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // GUARANTEE_FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.guaranteeFlag = iprot.readI32();
              struct.setGuaranteeFlagIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RECOMMEND_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.recommendCode = iprot.readString();
              struct.setRecommendCodeIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = iprot.readI32();
              struct.setStatusIsSet(true);
            } else {
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OrderThriftForm struct) throws TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderCode != null) {
        oprot.writeFieldBegin(ORDER_CODE_FIELD_DESC);
        oprot.writeString(struct.orderCode);
        oprot.writeFieldEnd();
      }
      if (struct.companyName != null) {
        oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
        oprot.writeString(struct.companyName);
        oprot.writeFieldEnd();
      }
      if (struct.companyType != null) {
        oprot.writeFieldBegin(COMPANY_TYPE_FIELD_DESC);
        oprot.writeString(struct.companyType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LOAN_AMOUNT_FIELD_DESC);
      oprot.writeDouble(struct.loanAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOAN_TERM_FIELD_DESC);
      oprot.writeI32(struct.loanTerm);
      oprot.writeFieldEnd();
      if (struct.managementAddr != null) {
        oprot.writeFieldBegin(MANAGEMENT_ADDR_FIELD_DESC);
        oprot.writeString(struct.managementAddr);
        oprot.writeFieldEnd();
      }
      if (struct.contactPhone != null) {
        oprot.writeFieldBegin(CONTACT_PHONE_FIELD_DESC);
        oprot.writeString(struct.contactPhone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(GUARANTEE_FLAG_FIELD_DESC);
      oprot.writeI32(struct.guaranteeFlag);
      oprot.writeFieldEnd();
      if (struct.recommendCode != null) {
        oprot.writeFieldBegin(RECOMMEND_CODE_FIELD_DESC);
        oprot.writeString(struct.recommendCode);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(STATUS_FIELD_DESC);
      oprot.writeI32(struct.status);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrderThriftFormTupleSchemeFactory implements SchemeFactory {
    public OrderThriftFormTupleScheme getScheme() {
      return new OrderThriftFormTupleScheme();
    }
  }

  private static class OrderThriftFormTupleScheme extends TupleScheme<OrderThriftForm> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OrderThriftForm struct) throws TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderCode()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(1);
      }
      if (struct.isSetCompanyType()) {
        optionals.set(2);
      }
      if (struct.isSetLoanAmount()) {
        optionals.set(3);
      }
      if (struct.isSetLoanTerm()) {
        optionals.set(4);
      }
      if (struct.isSetManagementAddr()) {
        optionals.set(5);
      }
      if (struct.isSetContactPhone()) {
        optionals.set(6);
      }
      if (struct.isSetGuaranteeFlag()) {
        optionals.set(7);
      }
      if (struct.isSetRecommendCode()) {
        optionals.set(8);
      }
      if (struct.isSetStatus()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetOrderCode()) {
        oprot.writeString(struct.orderCode);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetCompanyType()) {
        oprot.writeString(struct.companyType);
      }
      if (struct.isSetLoanAmount()) {
        oprot.writeDouble(struct.loanAmount);
      }
      if (struct.isSetLoanTerm()) {
        oprot.writeI32(struct.loanTerm);
      }
      if (struct.isSetManagementAddr()) {
        oprot.writeString(struct.managementAddr);
      }
      if (struct.isSetContactPhone()) {
        oprot.writeString(struct.contactPhone);
      }
      if (struct.isSetGuaranteeFlag()) {
        oprot.writeI32(struct.guaranteeFlag);
      }
      if (struct.isSetRecommendCode()) {
        oprot.writeString(struct.recommendCode);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OrderThriftForm struct) throws TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.orderCode = iprot.readString();
        struct.setOrderCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.companyType = iprot.readString();
        struct.setCompanyTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.loanAmount = iprot.readDouble();
        struct.setLoanAmountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.loanTerm = iprot.readI32();
        struct.setLoanTermIsSet(true);
      }
      if (incoming.get(5)) {
        struct.managementAddr = iprot.readString();
        struct.setManagementAddrIsSet(true);
      }
      if (incoming.get(6)) {
        struct.contactPhone = iprot.readString();
        struct.setContactPhoneIsSet(true);
      }
      if (incoming.get(7)) {
        struct.guaranteeFlag = iprot.readI32();
        struct.setGuaranteeFlagIsSet(true);
      }
      if (incoming.get(8)) {
        struct.recommendCode = iprot.readString();
        struct.setRecommendCodeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.status = iprot.readI32();
        struct.setStatusIsSet(true);
      }
    }
  }

}

