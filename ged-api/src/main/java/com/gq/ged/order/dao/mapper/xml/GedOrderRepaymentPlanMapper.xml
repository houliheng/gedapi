<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gq.ged.order.dao.mapper.GedOrderRepaymentPlanMapper">
  <resultMap id="BaseResultMap" type="com.gq.ged.order.dao.model.GedOrderRepaymentPlan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_term" jdbcType="INTEGER" property="orderTerm" />
    <result column="repayment_amount" jdbcType="DECIMAL" property="repaymentAmount" />
    <result column="repayment_time" jdbcType="TIMESTAMP" property="repaymentTime" />
    <result column="credit_type" jdbcType="INTEGER" property="creditType" />
    <result column="repayment_flag" jdbcType="INTEGER" property="repaymentFlag" />
    <result column="overdue_amount" jdbcType="DECIMAL" property="overdueAmount" />
    <result column="overdue_interest" jdbcType="DECIMAL" property="overdueInterest" />
    <result column="overdue_penalty" jdbcType="DECIMAL" property="overduePenalty" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contract_no, order_no, user_id, order_term, repayment_amount, repayment_time, 
    credit_type, repayment_flag, overdue_amount, overdue_interest, overdue_penalty, create_id, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ged_order_repayment_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ged_order_repayment_plan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ged_order_repayment_plan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlanExample">
    delete from ged_order_repayment_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlan">
    insert into ged_order_repayment_plan (id, contract_no, order_no, 
      user_id, order_term, repayment_amount, 
      repayment_time, credit_type, repayment_flag, 
      overdue_amount, overdue_interest, overdue_penalty, 
      create_id, create_time)
    values (#{id,jdbcType=BIGINT}, #{contractNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{orderTerm,jdbcType=INTEGER}, #{repaymentAmount,jdbcType=DECIMAL}, 
      #{repaymentTime,jdbcType=TIMESTAMP}, #{creditType,jdbcType=INTEGER}, #{repaymentFlag,jdbcType=INTEGER}, 
      #{overdueAmount,jdbcType=DECIMAL}, #{overdueInterest,jdbcType=DECIMAL}, #{overduePenalty,jdbcType=DECIMAL}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlan">
    insert into ged_order_repayment_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractNo != null">
        contract_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderTerm != null">
        order_term,
      </if>
      <if test="repaymentAmount != null">
        repayment_amount,
      </if>
      <if test="repaymentTime != null">
        repayment_time,
      </if>
      <if test="creditType != null">
        credit_type,
      </if>
      <if test="repaymentFlag != null">
        repayment_flag,
      </if>
      <if test="overdueAmount != null">
        overdue_amount,
      </if>
      <if test="overdueInterest != null">
        overdue_interest,
      </if>
      <if test="overduePenalty != null">
        overdue_penalty,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderTerm != null">
        #{orderTerm,jdbcType=INTEGER},
      </if>
      <if test="repaymentAmount != null">
        #{repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="repaymentTime != null">
        #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditType != null">
        #{creditType,jdbcType=INTEGER},
      </if>
      <if test="repaymentFlag != null">
        #{repaymentFlag,jdbcType=INTEGER},
      </if>
      <if test="overdueAmount != null">
        #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null">
        #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overduePenalty != null">
        #{overduePenalty,jdbcType=DECIMAL},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlanExample" resultType="java.lang.Integer">
    select count(*) from ged_order_repayment_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ged_order_repayment_plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.contractNo != null">
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.orderTerm != null">
        order_term = #{record.orderTerm,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentAmount != null">
        repayment_amount = #{record.repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.repaymentTime != null">
        repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creditType != null">
        credit_type = #{record.creditType,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentFlag != null">
        repayment_flag = #{record.repaymentFlag,jdbcType=INTEGER},
      </if>
      <if test="record.overdueAmount != null">
        overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueInterest != null">
        overdue_interest = #{record.overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="record.overduePenalty != null">
        overdue_penalty = #{record.overduePenalty,jdbcType=DECIMAL},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ged_order_repayment_plan
    set id = #{record.id,jdbcType=BIGINT},
      contract_no = #{record.contractNo,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      order_term = #{record.orderTerm,jdbcType=INTEGER},
      repayment_amount = #{record.repaymentAmount,jdbcType=DECIMAL},
      repayment_time = #{record.repaymentTime,jdbcType=TIMESTAMP},
      credit_type = #{record.creditType,jdbcType=INTEGER},
      repayment_flag = #{record.repaymentFlag,jdbcType=INTEGER},
      overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      overdue_interest = #{record.overdueInterest,jdbcType=DECIMAL},
      overdue_penalty = #{record.overduePenalty,jdbcType=DECIMAL},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlan">
    update ged_order_repayment_plan
    <set>
      <if test="contractNo != null">
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderTerm != null">
        order_term = #{orderTerm,jdbcType=INTEGER},
      </if>
      <if test="repaymentAmount != null">
        repayment_amount = #{repaymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="repaymentTime != null">
        repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creditType != null">
        credit_type = #{creditType,jdbcType=INTEGER},
      </if>
      <if test="repaymentFlag != null">
        repayment_flag = #{repaymentFlag,jdbcType=INTEGER},
      </if>
      <if test="overdueAmount != null">
        overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueInterest != null">
        overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      </if>
      <if test="overduePenalty != null">
        overdue_penalty = #{overduePenalty,jdbcType=DECIMAL},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.ged.order.dao.model.GedOrderRepaymentPlan">
    update ged_order_repayment_plan
    set contract_no = #{contractNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      order_term = #{orderTerm,jdbcType=INTEGER},
      repayment_amount = #{repaymentAmount,jdbcType=DECIMAL},
      repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
      credit_type = #{creditType,jdbcType=INTEGER},
      repayment_flag = #{repaymentFlag,jdbcType=INTEGER},
      overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      overdue_interest = #{overdueInterest,jdbcType=DECIMAL},
      overdue_penalty = #{overduePenalty,jdbcType=DECIMAL},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>