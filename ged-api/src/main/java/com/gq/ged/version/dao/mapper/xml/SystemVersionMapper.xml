<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gq.ged.version.dao.mapper.SystemVersionMapper" >
  <resultMap id="BaseResultMap" type="com.gq.ged.version.dao.model.SystemVersion" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="device_platform" property="devicePlatform" jdbcType="INTEGER" />
    <result column="version_code" property="versionCode" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="update_url" property="updateUrl" jdbcType="VARCHAR" />
    <result column="update_msg" property="updateMsg" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_enabled" property="isEnabled" jdbcType="TINYINT" />
    <result column="create_id" property="createId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_id" property="modifyId" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, device_platform, version_code, channel, update_url, update_msg, status, is_enabled, 
    create_id, create_time, modify_id, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gq.ged.version.dao.model.SystemVersionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ged_system_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ged_system_version
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ged_system_version
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.ged.version.dao.model.SystemVersionExample" >
    delete from ged_system_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.ged.version.dao.model.SystemVersion" >
    insert into ged_system_version (id, device_platform, version_code, 
      channel, update_url, update_msg, 
      status, is_enabled, create_id, 
      create_time, modify_id, modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{devicePlatform,jdbcType=INTEGER}, #{versionCode,jdbcType=VARCHAR}, 
      #{channel,jdbcType=VARCHAR}, #{updateUrl,jdbcType=VARCHAR}, #{updateMsg,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{isEnabled,jdbcType=TINYINT}, #{createId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gq.ged.version.dao.model.SystemVersion" >
    insert into ged_system_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="devicePlatform != null" >
        device_platform,
      </if>
      <if test="versionCode != null" >
        version_code,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="updateUrl != null" >
        update_url,
      </if>
      <if test="updateMsg != null" >
        update_msg,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyId != null" >
        modify_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="devicePlatform != null" >
        #{devicePlatform,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="updateUrl != null" >
        #{updateUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateMsg != null" >
        #{updateMsg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        #{modifyId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.ged.version.dao.model.SystemVersionExample" resultType="java.lang.Integer" >
    select count(*) from ged_system_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ged_system_version
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.devicePlatform != null" >
        device_platform = #{record.devicePlatform,jdbcType=INTEGER},
      </if>
      <if test="record.versionCode != null" >
        version_code = #{record.versionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUrl != null" >
        update_url = #{record.updateUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.updateMsg != null" >
        update_msg = #{record.updateMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=TINYINT},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyId != null" >
        modify_id = #{record.modifyId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ged_system_version
    set id = #{record.id,jdbcType=BIGINT},
      device_platform = #{record.devicePlatform,jdbcType=INTEGER},
      version_code = #{record.versionCode,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=VARCHAR},
      update_url = #{record.updateUrl,jdbcType=VARCHAR},
      update_msg = #{record.updateMsg,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      is_enabled = #{record.isEnabled,jdbcType=TINYINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_id = #{record.modifyId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.ged.version.dao.model.SystemVersion" >
    update ged_system_version
    <set >
      <if test="devicePlatform != null" >
        device_platform = #{devicePlatform,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="updateUrl != null" >
        update_url = #{updateUrl,jdbcType=VARCHAR},
      </if>
      <if test="updateMsg != null" >
        update_msg = #{updateMsg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        modify_id = #{modifyId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.ged.version.dao.model.SystemVersion" >
    update ged_system_version
    set device_platform = #{devicePlatform,jdbcType=INTEGER},
      version_code = #{versionCode,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      update_url = #{updateUrl,jdbcType=VARCHAR},
      update_msg = #{updateMsg,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      is_enabled = #{isEnabled,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>