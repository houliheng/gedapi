<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gq.ged.file.dao.mapper.SystemFileMapper" >
  <resultMap id="BaseResultMap" type="com.gq.ged.file.dao.model.SystemFile" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="file_type" property="fileType" jdbcType="VARCHAR" />
    <result column="bus_type" property="busType" jdbcType="VARCHAR" />
    <result column="bus_sub_type" property="busSubType" jdbcType="VARCHAR" />
    <result column="ref_id" property="refId" jdbcType="BIGINT" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="is_enabled" property="isEnabled" jdbcType="TINYINT" />
    <result column="create_id" property="createId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_id" property="modifyId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, file_type, bus_type, bus_sub_type, ref_id, file_url, description, sort, remark, 
    is_enabled, create_id, create_time, modify_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gq.ged.file.dao.model.SystemFileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ged_system_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ged_system_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ged_system_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.ged.file.dao.model.SystemFileExample" >
    delete from ged_system_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.ged.file.dao.model.SystemFile" >
    insert into ged_system_file (id, file_type, bus_type, 
      bus_sub_type, ref_id, file_url, 
      description, sort, remark, 
      is_enabled, create_id, create_time, 
      modify_id)
    values (#{id,jdbcType=BIGINT}, #{fileType,jdbcType=VARCHAR}, #{busType,jdbcType=VARCHAR}, 
      #{busSubType,jdbcType=VARCHAR}, #{refId,jdbcType=BIGINT}, #{fileUrl,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{sort,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{isEnabled,jdbcType=TINYINT}, #{createId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.ged.file.dao.model.SystemFile" >
    insert into ged_system_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="busType != null" >
        bus_type,
      </if>
      <if test="busSubType != null" >
        bus_sub_type,
      </if>
      <if test="refId != null" >
        ref_id,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isEnabled != null" >
        is_enabled,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyId != null" >
        modify_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="busType != null" >
        #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busSubType != null" >
        #{busSubType,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        #{refId,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        #{isEnabled,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        #{modifyId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.ged.file.dao.model.SystemFileExample" resultType="java.lang.Integer" >
    select count(*) from ged_system_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ged_system_file
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fileType != null" >
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.busType != null" >
        bus_type = #{record.busType,jdbcType=VARCHAR},
      </if>
      <if test="record.busSubType != null" >
        bus_sub_type = #{record.busSubType,jdbcType=VARCHAR},
      </if>
      <if test="record.refId != null" >
        ref_id = #{record.refId,jdbcType=BIGINT},
      </if>
      <if test="record.fileUrl != null" >
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnabled != null" >
        is_enabled = #{record.isEnabled,jdbcType=TINYINT},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyId != null" >
        modify_id = #{record.modifyId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ged_system_file
    set id = #{record.id,jdbcType=BIGINT},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      bus_type = #{record.busType,jdbcType=VARCHAR},
      bus_sub_type = #{record.busSubType,jdbcType=VARCHAR},
      ref_id = #{record.refId,jdbcType=BIGINT},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_enabled = #{record.isEnabled,jdbcType=TINYINT},
      create_id = #{record.createId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_id = #{record.modifyId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.ged.file.dao.model.SystemFile" >
    update ged_system_file
    <set >
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="busType != null" >
        bus_type = #{busType,jdbcType=VARCHAR},
      </if>
      <if test="busSubType != null" >
        bus_sub_type = #{busSubType,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        ref_id = #{refId,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null" >
        is_enabled = #{isEnabled,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyId != null" >
        modify_id = #{modifyId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.ged.file.dao.model.SystemFile" >
    update ged_system_file
    set file_type = #{fileType,jdbcType=VARCHAR},
      bus_type = #{busType,jdbcType=VARCHAR},
      bus_sub_type = #{busSubType,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=BIGINT},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      is_enabled = #{isEnabled,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_id = #{modifyId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>