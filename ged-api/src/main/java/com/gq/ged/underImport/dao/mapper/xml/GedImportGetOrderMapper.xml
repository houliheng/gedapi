<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gq.ged.underImport.dao.mapper.GedImportGetOrderMapper">
  <resultMap id="BaseResultMap" type="com.gq.ged.underImport.dao.model.GedImportGetOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_card_no" jdbcType="VARCHAR" property="companyCardNo" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="loan_purpose" jdbcType="VARCHAR" property="loanPurpose" />
    <result column="loan_type" jdbcType="INTEGER" property="loanType" />
    <result column="loan_amount" jdbcType="DECIMAL" property="loanAmount" />
    <result column="credit_amount" jdbcType="DECIMAL" property="creditAmount" />
    <result column="loan_term" jdbcType="INTEGER" property="loanTerm" />
    <result column="appro_term" jdbcType="INTEGER" property="approTerm" />
    <result column="loan_date" jdbcType="TIMESTAMP" property="loanDate" />
    <result column="month_rate" jdbcType="DECIMAL" property="monthRate" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="contract_phone" jdbcType="VARCHAR" property="contractPhone" />
    <result column="cash_deposit" jdbcType="DECIMAL" property="cashDeposit" />
    <result column="service_fee" jdbcType="DECIMAL" property="serviceFee" />
    <result column="service_fee_way" jdbcType="INTEGER" property="serviceFeeWay" />
    <result column="manage_fee" jdbcType="DECIMAL" property="manageFee" />
    <result column="repayment_type" jdbcType="VARCHAR" property="repaymentType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="cust_id" jdbcType="VARCHAR" property="custId" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="batch_date" jdbcType="VARCHAR" property="batchDate" />
    <result column="city_code" jdbcType="VARCHAR" property="cityCode" />
    <result column="bank_branch_name" jdbcType="VARCHAR" property="bankBranchName" />
    <result column="handle_status" jdbcType="INTEGER" property="handleStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contract_no, order_code, company_name, company_card_no, id_number, loan_purpose, 
    loan_type, loan_amount, credit_amount, loan_term, appro_term, loan_date, month_rate, 
    address, contract_phone, cash_deposit, service_fee, service_fee_way, manage_fee, 
    repayment_type, status, account_code, user_name, user_type, cust_id, bank_code, batch_date, 
    city_code, bank_branch_name, handle_status
  </sql>
  <select id="selectByExample" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ged_import_get_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ged_import_get_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ged_import_get_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrderExample">
    delete from ged_import_get_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrder">
    insert into ged_import_get_order (id, contract_no, order_code, 
      company_name, company_card_no, id_number, 
      loan_purpose, loan_type, loan_amount, 
      credit_amount, loan_term, appro_term, 
      loan_date, month_rate, address, 
      contract_phone, cash_deposit, service_fee, 
      service_fee_way, manage_fee, repayment_type, 
      status, account_code, user_name, 
      user_type, cust_id, bank_code, 
      batch_date, city_code, bank_branch_name, 
      handle_status)
    values (#{id,jdbcType=BIGINT}, #{contractNo,jdbcType=VARCHAR}, #{orderCode,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{companyCardNo,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{loanPurpose,jdbcType=VARCHAR}, #{loanType,jdbcType=INTEGER}, #{loanAmount,jdbcType=DECIMAL}, 
      #{creditAmount,jdbcType=DECIMAL}, #{loanTerm,jdbcType=INTEGER}, #{approTerm,jdbcType=INTEGER}, 
      #{loanDate,jdbcType=TIMESTAMP}, #{monthRate,jdbcType=DECIMAL}, #{address,jdbcType=VARCHAR}, 
      #{contractPhone,jdbcType=VARCHAR}, #{cashDeposit,jdbcType=DECIMAL}, #{serviceFee,jdbcType=DECIMAL}, 
      #{serviceFeeWay,jdbcType=INTEGER}, #{manageFee,jdbcType=DECIMAL}, #{repaymentType,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{accountCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userType,jdbcType=INTEGER}, #{custId,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, 
      #{batchDate,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{bankBranchName,jdbcType=VARCHAR}, 
      #{handleStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrder">
    insert into ged_import_get_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contractNo != null">
        contract_no,
      </if>
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyCardNo != null">
        company_card_no,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="loanPurpose != null">
        loan_purpose,
      </if>
      <if test="loanType != null">
        loan_type,
      </if>
      <if test="loanAmount != null">
        loan_amount,
      </if>
      <if test="creditAmount != null">
        credit_amount,
      </if>
      <if test="loanTerm != null">
        loan_term,
      </if>
      <if test="approTerm != null">
        appro_term,
      </if>
      <if test="loanDate != null">
        loan_date,
      </if>
      <if test="monthRate != null">
        month_rate,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="contractPhone != null">
        contract_phone,
      </if>
      <if test="cashDeposit != null">
        cash_deposit,
      </if>
      <if test="serviceFee != null">
        service_fee,
      </if>
      <if test="serviceFeeWay != null">
        service_fee_way,
      </if>
      <if test="manageFee != null">
        manage_fee,
      </if>
      <if test="repaymentType != null">
        repayment_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="batchDate != null">
        batch_date,
      </if>
      <if test="cityCode != null">
        city_code,
      </if>
      <if test="bankBranchName != null">
        bank_branch_name,
      </if>
      <if test="handleStatus != null">
        handle_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="contractNo != null">
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCardNo != null">
        #{companyCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="loanPurpose != null">
        #{loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="loanType != null">
        #{loanType,jdbcType=INTEGER},
      </if>
      <if test="loanAmount != null">
        #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditAmount != null">
        #{creditAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanTerm != null">
        #{loanTerm,jdbcType=INTEGER},
      </if>
      <if test="approTerm != null">
        #{approTerm,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="monthRate != null">
        #{monthRate,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contractPhone != null">
        #{contractPhone,jdbcType=VARCHAR},
      </if>
      <if test="cashDeposit != null">
        #{cashDeposit,jdbcType=DECIMAL},
      </if>
      <if test="serviceFee != null">
        #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeeWay != null">
        #{serviceFeeWay,jdbcType=INTEGER},
      </if>
      <if test="manageFee != null">
        #{manageFee,jdbcType=DECIMAL},
      </if>
      <if test="repaymentType != null">
        #{repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="batchDate != null">
        #{batchDate,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBranchName != null">
        #{bankBranchName,jdbcType=VARCHAR},
      </if>
      <if test="handleStatus != null">
        #{handleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrderExample" resultType="java.lang.Integer">
    select count(*) from ged_import_get_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ged_import_get_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.contractNo != null">
        contract_no = #{record.contractNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderCode != null">
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCardNo != null">
        company_card_no = #{record.companyCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.loanPurpose != null">
        loan_purpose = #{record.loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="record.loanType != null">
        loan_type = #{record.loanType,jdbcType=INTEGER},
      </if>
      <if test="record.loanAmount != null">
        loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.creditAmount != null">
        credit_amount = #{record.creditAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.loanTerm != null">
        loan_term = #{record.loanTerm,jdbcType=INTEGER},
      </if>
      <if test="record.approTerm != null">
        appro_term = #{record.approTerm,jdbcType=INTEGER},
      </if>
      <if test="record.loanDate != null">
        loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.monthRate != null">
        month_rate = #{record.monthRate,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.contractPhone != null">
        contract_phone = #{record.contractPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.cashDeposit != null">
        cash_deposit = #{record.cashDeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceFee != null">
        service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceFeeWay != null">
        service_fee_way = #{record.serviceFeeWay,jdbcType=INTEGER},
      </if>
      <if test="record.manageFee != null">
        manage_fee = #{record.manageFee,jdbcType=DECIMAL},
      </if>
      <if test="record.repaymentType != null">
        repayment_type = #{record.repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null">
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.batchDate != null">
        batch_date = #{record.batchDate,jdbcType=VARCHAR},
      </if>
      <if test="record.cityCode != null">
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankBranchName != null">
        bank_branch_name = #{record.bankBranchName,jdbcType=VARCHAR},
      </if>
      <if test="record.handleStatus != null">
        handle_status = #{record.handleStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ged_import_get_order
    set id = #{record.id,jdbcType=BIGINT},
      contract_no = #{record.contractNo,jdbcType=VARCHAR},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_card_no = #{record.companyCardNo,jdbcType=VARCHAR},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      loan_purpose = #{record.loanPurpose,jdbcType=VARCHAR},
      loan_type = #{record.loanType,jdbcType=INTEGER},
      loan_amount = #{record.loanAmount,jdbcType=DECIMAL},
      credit_amount = #{record.creditAmount,jdbcType=DECIMAL},
      loan_term = #{record.loanTerm,jdbcType=INTEGER},
      appro_term = #{record.approTerm,jdbcType=INTEGER},
      loan_date = #{record.loanDate,jdbcType=TIMESTAMP},
      month_rate = #{record.monthRate,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      contract_phone = #{record.contractPhone,jdbcType=VARCHAR},
      cash_deposit = #{record.cashDeposit,jdbcType=DECIMAL},
      service_fee = #{record.serviceFee,jdbcType=DECIMAL},
      service_fee_way = #{record.serviceFeeWay,jdbcType=INTEGER},
      manage_fee = #{record.manageFee,jdbcType=DECIMAL},
      repayment_type = #{record.repaymentType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      batch_date = #{record.batchDate,jdbcType=VARCHAR},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      bank_branch_name = #{record.bankBranchName,jdbcType=VARCHAR},
      handle_status = #{record.handleStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrder">
    update ged_import_get_order
    <set>
      <if test="contractNo != null">
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCardNo != null">
        company_card_no = #{companyCardNo,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="loanPurpose != null">
        loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
      </if>
      <if test="loanType != null">
        loan_type = #{loanType,jdbcType=INTEGER},
      </if>
      <if test="loanAmount != null">
        loan_amount = #{loanAmount,jdbcType=DECIMAL},
      </if>
      <if test="creditAmount != null">
        credit_amount = #{creditAmount,jdbcType=DECIMAL},
      </if>
      <if test="loanTerm != null">
        loan_term = #{loanTerm,jdbcType=INTEGER},
      </if>
      <if test="approTerm != null">
        appro_term = #{approTerm,jdbcType=INTEGER},
      </if>
      <if test="loanDate != null">
        loan_date = #{loanDate,jdbcType=TIMESTAMP},
      </if>
      <if test="monthRate != null">
        month_rate = #{monthRate,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="contractPhone != null">
        contract_phone = #{contractPhone,jdbcType=VARCHAR},
      </if>
      <if test="cashDeposit != null">
        cash_deposit = #{cashDeposit,jdbcType=DECIMAL},
      </if>
      <if test="serviceFee != null">
        service_fee = #{serviceFee,jdbcType=DECIMAL},
      </if>
      <if test="serviceFeeWay != null">
        service_fee_way = #{serviceFeeWay,jdbcType=INTEGER},
      </if>
      <if test="manageFee != null">
        manage_fee = #{manageFee,jdbcType=DECIMAL},
      </if>
      <if test="repaymentType != null">
        repayment_type = #{repaymentType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="batchDate != null">
        batch_date = #{batchDate,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null">
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="bankBranchName != null">
        bank_branch_name = #{bankBranchName,jdbcType=VARCHAR},
      </if>
      <if test="handleStatus != null">
        handle_status = #{handleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gq.ged.underImport.dao.model.GedImportGetOrder">
    update ged_import_get_order
    set contract_no = #{contractNo,jdbcType=VARCHAR},
      order_code = #{orderCode,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      company_card_no = #{companyCardNo,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      loan_purpose = #{loanPurpose,jdbcType=VARCHAR},
      loan_type = #{loanType,jdbcType=INTEGER},
      loan_amount = #{loanAmount,jdbcType=DECIMAL},
      credit_amount = #{creditAmount,jdbcType=DECIMAL},
      loan_term = #{loanTerm,jdbcType=INTEGER},
      appro_term = #{approTerm,jdbcType=INTEGER},
      loan_date = #{loanDate,jdbcType=TIMESTAMP},
      month_rate = #{monthRate,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      contract_phone = #{contractPhone,jdbcType=VARCHAR},
      cash_deposit = #{cashDeposit,jdbcType=DECIMAL},
      service_fee = #{serviceFee,jdbcType=DECIMAL},
      service_fee_way = #{serviceFeeWay,jdbcType=INTEGER},
      manage_fee = #{manageFee,jdbcType=DECIMAL},
      repayment_type = #{repaymentType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      account_code = #{accountCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      batch_date = #{batchDate,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      bank_branch_name = #{bankBranchName,jdbcType=VARCHAR},
      handle_status = #{handleStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsertOfflineOrder" parameterType="java.util.List">
    insert ignore into ged_import_get_order
    (contract_no, order_code,
      company_name, company_card_no, id_number,
      loan_purpose, loan_type, loan_amount,
      credit_amount, loan_term, appro_term,
      loan_date, month_rate, address,
      contract_phone, cash_deposit, service_fee,
      service_fee_way, manage_fee, repayment_type,
      status, account_code, user_name,
      user_type, cust_id,bank_code, batch_date,city_code,
      bank_branch_name)
    values
    <foreach collection="list" item="item" separator=",">
    (#{item.contractNo,jdbcType=VARCHAR}, #{item.orderCode,jdbcType=VARCHAR},
      #{item.companyName,jdbcType=VARCHAR}, #{item.companyCardNo,jdbcType=VARCHAR}, #{item.idNumber,jdbcType=VARCHAR},
      #{item.loanPurpose,jdbcType=VARCHAR}, #{item.loanType,jdbcType=INTEGER}, #{item.loanAmount,jdbcType=DECIMAL},
      #{item.creditAmount,jdbcType=DECIMAL}, #{item.loanTerm,jdbcType=INTEGER}, #{item.approTerm,jdbcType=INTEGER},
      #{item.loanDate,jdbcType=TIMESTAMP}, #{item.monthRate,jdbcType=DECIMAL}, #{item.address,jdbcType=VARCHAR},
      #{item.contractPhone,jdbcType=VARCHAR}, #{item.cashDeposit,jdbcType=DECIMAL}, #{item.serviceFee,jdbcType=DECIMAL},
      #{item.serviceFeeWay,jdbcType=INTEGER}, #{item.manageFee,jdbcType=DECIMAL}, #{item.repaymentType,jdbcType=VARCHAR},
      #{item.status,jdbcType=INTEGER}, #{item.accountCode,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR},
      #{item.userType,jdbcType=INTEGER}, #{item.custId,jdbcType=VARCHAR}, #{item.bankCode,jdbcType=VARCHAR},
      #{item.batchDate,jdbcType=VARCHAR},#{item.cityCode,jdbcType=VARCHAR},#{item.bankBranchName,jdbcType=VARCHAR})
    </foreach>
  </insert>
</mapper>