logging.config=classpath:log/log4j2.xml
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:com/gq/ged/**/dao/mapper/xml/*Mapper.xml


#spring.datasource.datasourceType=${ged-api.dbconfig.datasourceType}
jdbc.driverClassName=${ged-api.dbconfig.jdbc.driverClassName}
jdbc.url=jdbc:mysql://10.100.200.119:3308/gq_ged_loan?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
jdbc.username=gq_p2pget_fy
jdbc.password=test2016

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=${ged-api.dbconfig.spring.datasource.initialSize}
spring.datasource.minIdle=${ged-api.dbconfig.spring.datasource.minIdle}
spring.datasource.maxActive=${ged-api.dbconfig.spring.datasource.maxActive}
# 配置获取连接等待超时的时间
spring.datasource.maxWait=${ged-api.dbconfig.spring.datasource.maxWait}
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=${ged-api.dbconfig.spring.datasource.timeBetweenEvictionRunsMillis}
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=${ged-api.dbconfig.spring.datasource.minEvictableIdleTimeMillis}
spring.datasource.validationQuery=${ged-api.dbconfig.spring.datasource.validationQuery}
spring.datasource.testWhileIdle=${ged-api.dbconfig.spring.datasource.testWhileIdle}
spring.datasource.testOnBorrow=${ged-api.dbconfig.spring.datasource.testOnBorrow}
spring.datasource.testOnReturn=${ged-api.dbconfig.spring.datasource.testOnReturn}
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=${ged-api.dbconfig.spring.datasource.poolPreparedStatements}
spring.datasource.maxPoolPreparedStatementPerConnectionSize=${ged-api.dbconfig.spring.datasource.maxPoolPreparedStatementPerConnectionSize}
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=${ged-api.dbconfig.spring.datasource.filters}
spring.datasource.connectionProperties=${ged-api.dbconfig.spring.datasource.connectionProperties}
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=${ged-api.dbconfig.spring.datasource.useGlobalDataSourceStat}
#druid datasouce database settings end

# redisson set config begin
redisson.nodes=${ged-api.redisConfig.redisson.nodes}
redisson.database=${ged-api.redisConfig.redisson.database}
redisson.master=${ged-api.redisConfig.redisson.master}
redisson.connect.type=${ged-api.redisConfig.redisson.connect.type}
# redisson set config end
server.port=9090
user.password.salt=${ged-api.otherConfig.user.password.salt}
gq.ged.fast.trackerServers=${ged-api.otherConfig.gq.ged.fast.trackerServers}


#模板
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
# 这是重点， 会过滤.ftl后缀的文件
spring.freemarker.suffix=.ftl
# spring boot 默认的页面模板存放目录
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.order=1

spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

#短信地址
gq.cash.msm.template.url=${ged-api.smsConfig.gq.cash.msm.template.url}
gq.cash.msm.template.sysCode=${ged-api.smsConfig.gq.cash.msm.template.sysCode}
gq.cash.msm.template.register.code=${ged-api.smsConfig.gq.cash.msm.template.register.code}
gq.cash.msm.template.forget.code=${ged-api.smsConfig.gq.cash.msm.template.forget.code}
gq.cash.msm.template.loansysregister.code=${ged-api.smsConfig.gq.cash.msm.template.loansysregister.code}
gq.cash.msm.template.loanrefuse.code=${ged-api.smsConfig.gq.cash.msm.template.loanrefuse.code}
gq.cash.msm.template.bindMobile.code=${ged-api.smsConfig.gq.cash.msm.template.bindMobile.code}

#MQ
spring.activemq.broker-url=${ged-api.outerSysConfig.activemq.url}
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=100
spring.activemq.pool.expiry-timeout=10000
spring.activemq.pool.idle-timeout=30000

#签约信息
ged.sign.info=${ged-api.outerSysConfig.signInfo}
ged.sign.trade.type=${ged-api.outerSysConfig.signTradeType}
ged.sign.success.h5=${ged-api.outerSysConfig.signSuccessCallback}
ged.sign.trade.type.v2=${ged-api.outerSysConfig.signTradeType_v2}
ged.sign.page.url.v2=${ged-api.outerSysConfig.signPageUrl_v2}
ged.sign.callback.url.v2=${ged-api.outerSysConfig.signCallbackUrl_v2}

#借款系统URL
gq.borrow.url=${ged-api.outerSysConfig.gq.ged.call.loansys.url}
#资金系统URL
gq.ged.call.capital.url=${ged-api.outerSysConfig.gq.ged.capital.url}
#冠易通系统URL
gq.ged.call.get.createCust.url=${ged-api.outerSysConfig.gq.ged.call.get.createCust.url}

#富有支付商户号
ged.pay.mchn=${ged-api.outerSysConfig.ged.pay.mchn}
#资金商户号
gq.ged.get.mchn=${ged-api.outerSysConfig.gq.ged.get.mchn}
#开户交易类型
gq.ged.call.capital.account.tradetype.value=${ged-api.outerSysConfig.gq.ged.call.capital.account.tradetype.value}
#充值交易类型
gq.ged.get.rechargeTradeType=${ged-api.outerSysConfig.gq.ged.get.rechargeTradeType}
#充值成功回调交易类型
gq.ged.get.rechargeCallBackTradeType=${ged-api.outerSysConfig.gq.ged.get.rechargeCallBackTradeType}
#缴费类型 -- 服务费
gq.ged.get.compensationTradeType=${ged-api.outerSysConfig.gq.ged.get.compensationTradeType}

gq.ged.get.compensaTradeType=${ged-api.outerSysConfig.gq.ged.get.compensaTradeType}
#缴费财务类型   -- 服务费
gq.ged.get.accountsType=${ged-api.outerSysConfig.gq.ged.get.accountsType}
#gq.ged.ziChanDuan.serviceFee.url=${ged-api.outerSysConfig.gq.ged.ziChanDuan.serviceFee.url}
gq.ged.h5.url=${ged-api.outerSysConfig.gq.ged.h5.url}
#提现交易类型
gq.ged.withDraw.tradeType=${ged-api.outerSysConfig.gq.ged.withDraw.tradeType}
#提现申请类型
gq.ged.withDraw.applyType=${ged-api.outerSysConfig.gq.ged.withDraw.applyType}
#账户余额的交易类型
gq.ged.accountBalance.tradeType=${ged-api.outerSysConfig.gq.ged.accountBalance.tradeType}
#冠以贷api的部署地址
gq.ged.api.url=${ged-api.outerSysConfig.gq.ged.api.url}
#冠以通后台
gq.ged.get.url=${ged-api.outerSysConfig.gq.ged.get.url}
#冠以通后台生成合同url
gq.ged.getcontract.url=${ged-api.contract.gq.ged.getcontract.url}
#get后台和合同照片fasturl
gq.ged.fastDFS.url=${ged-api.outerSysConfig.gq.ged.fastDFS.url}


#资金平台V2
#个人开户
gq.ged.call.v2.accont.personal.url=${ged-api.v2config.accont.personal.url}
gq.ged.call.v2.accont.personal.pc.url=${ged-api.v2config.accont.personal.pc.url}
gq.ged.call.v2.accont.personal.page.url=${ged-api.v2config.accont.personal.page.url}
gq.ged.call.v2.accont.personal.pc.page.url=${ged-api.v2config.accont.personal.pc.page.url}
gq.ged.call.v2.accont.personal.callback.url=${ged-api.v2config.accont.personal.callback.url}
gq.ged.call.v2.accont.personal.tradeType=${ged-api.v2config.accont.personal.tradeType}
gq.ged.call.v2.accont.personal.pc.tradeType=${ged-api.v2config.accont.personal.pc.tradeType}
#企业开户
gq.ged.call.v2.accont.enterprise.url=${ged-api.v2config.accont.enterprise.url}
gq.ged.call.v2.accont.enterprise.pc.url=${ged-api.v2config.accont.enterprise.pc.url}
gq.ged.call.v2.accont.enterprise.page.url=${ged-api.v2config.accont.enterprise.page.url}
gq.ged.call.v2.accont.enterprise.pc.page.url=${ged-api.v2config.accont.enterprise.pc.page.url}
gq.ged.call.v2.accont.enterprise.callback.url=${ged-api.v2config.accont.enterprise.callback.url}
gq.ged.call.v2.accont.enterprise.tradeType=${ged-api.v2config.accont.enterprise.tradeType}
gq.ged.call.v2.accont.enterprise.modify.url=${ged-api.v2config.accont.enterprise.modify.url}
gq.ged.call.v2.accont.enterprise.modify.pc.url=${ged-api.v2config.accont.enterprise.modify.pc.url}
#网银充值
gq.ged.call.v2.recharge.url=${ged-api.v2config.recharge.url}
gq.ged.call.v2.recharge.page.url=${ged-api.v2config.recharge.page.url}
gq.ged.call.v2.recharge.callback.url=${ged-api.v2config.recharge.callback.url}
gq.ged.call.v2.recharge.tradeType=${ged-api.v2config.recharge.tradeType}
#用户激活
gq.ged.call.v2.activateUser.url=${ged-api.v2config.activateUser.url}
gq.ged.call.v2.activateUser.page.url=${ged-api.v2config.activateUser.page.url}
gq.ged.call.v2.activateUser.callback.url=${ged-api.v2config.activateUser.callback.url}
gq.ged.call.v2.activateUser.tradeType=${ged-api.v2config.activateUser.tradeType}
#查询资金账户余额
gq.ged.call.v2.queryAccBalance=${ged-api.v2config.queryAccBalance}
gq.ged.call.v2.queryAccBalance.tradeType=${ged-api.v2config.queryAccBalance.tradeType}
#费用收取
gq.ged.call.v2.charges.url=${ged-api.v2config.charges.url}
gq.ged.call.v2.charges.page.url=${ged-api.v2config.charges.page.url}

gq.ged.call.v2.charges.recharge.callback.url=${ged-api.v2config.charges.recharge.callback.url}
gq.ged.call.v2.charges.callback.url=${ged-api.v2config.charges.callback.url}
gq.ged.call.v2.charges.tradeType=${ged-api.v2config.charges.tradeType}
gq.ged.call.v2.charges.loanPlatform=${ged-api.v2config.charges.loanPlatform}
gq.ged.call.v2.charges.feeType=${ged-api.v2config.charges.feeType}
gq.ged.call.v2.charges.custType=${ged-api.v2config.charges.custType}
serviceFee.amount=30000.00


gq.ged.call.v2.verifyDeduct.tradeType=${ged-api.v2config.verifyDeduct.tradeType}
gq.ged.call.v2.verifyDeduct.url=${ged-api.v2config.verifyDeduct.url}
gq.ged.call.v2.verifyDeduct.page.url=${ged-api.v2config.verifyDeduct.page.url}
gq.ged.call.v2.verifyDeduct.callback.url=${ged-api.v2config.verifyDeduct.callback.url}
#网页提现
gq.ged.call.v2.withdraw.url=${ged-api.v2config.withdraw.url}
gq.ged.call.v2.withdraw.page.url=${ged-api.v2config.withdraw.page.url}
gq.ged.call.v2.withdraw.page.pc.url=${ged-api.v2config.withdraw.page.pc.url}
gq.ged.call.v2.withdraw.callback.url=${ged-api.v2config.withdraw.callback.url}
gq.ged.call.v2.withdraw.tradeType=${ged-api.v2config.withdraw.tradeType}
#给借款系统状态反馈url
gq.ged.gedUpdateOrderStatus.url=${ged-api.v2config.gedUpdateOrderStatus.url}
#提现反馈状态接口
gq.ged.firstWithDeposit.url=${ged-api.v2config.firstWithDeposit.url}
#银行卡变更
gq.ged.call.v2.bankCardChange.url=${ged-api.v2config.bankCardChange.url}
gq.ged.call.v2.bankCardChange.page.url=${ged-api.v2config.bankCardChange.page.url}
gq.ged.call.v2.bankCardChange.callback.url=${ged-api.v2config.bankCardChange.callback.url}
gq.ged.call.v2.bankCardChange.tradeType=${ged-api.v2config.bankCardChange.tradeType}
#冠e通>>开户回调
gq.ged.call.v2.estabAccountCallback=${ged-api.v2config.estabAccountCallback}
#冠e通>>用户激活
gq.ged.call.v2.userActivationCallback=${ged-api.v2config.userActivationCallback}
#冠e通>>注册
gq.ged.call.v2.registerUser=${ged-api.v2config.registerUser}
#借款系统
gq.ged.call.v2.loansys.account.url=${ged-api.v2config.loansys.account.url}
gq.ged.call.v2.loansys.accountCompany.url=${ged-api.v2config.loansys.accountCompany.url}
gq.ged.call.v2.repayment.borrow.url=${ged-api.v2config.repayment.borrow.url}
gq.ged.local.url=http://10.100.32.125:8080
#借款服务协议合同版本号
gq.jkfwVersion=${ged-api.contract.gq.jkfwVersion}
gq.qysqVersion=${ged-api.contract.gq.qysqVersion}
gq.grsqVersion=${ged-api.contract.gq.grsqVersion}
gq.dbVersion=${ged-api.contract.gq.dbVersion}
gq.txVersion=${ged-api.contract.gq.txVersion}
gq.signVersion=${ged-api.contract.gq.signVersion}
gq.netVersion=${ged-api.contract.gq.netVersion}

#不切换tomcat日志文件
#server.tomcat.accesslog.rotate=false

### xxl-job executor address：执行器"AppName"和地址信息配置：AppName执行器心跳注册分组依据；地址信息用于"调度中心请求并触发任务"和"执行器注册"。执行器默认端口为9999，执行器IP默认为空表示自动获取IP，多网卡时可手动设置指定IP。单机部署多个执行器时，注意要配置不同执行器端口；
xxl.job.admin.addresses=${ged-api.job.xxl.job.admin.addresses}
xxl.job.executor.appname=${ged-api.job.xxl.job.executor.appname}
xxl.job.executor.ip=
xxl.job.executor.port=${ged-api.job.xxl.job.executor.port}
### xxl-job log path：执行器运行日志文件存储的磁盘位置
xxl.job.executor.logpath=${ged-api.job.xxl.job.executor.logpath}

swagger.enable=true













